syntax = "proto3";

import "common/date.proto";

package world;

service Schedule {
  rpc GetSeason(GetSeasonRequest) returns (GetSeasonResponse);
}

message GetSeasonRequest {

}

message MatchInstance {
  optional uint64 match_id = 1;
  optional uint64 home_team_id = 2;
  optional uint64 away_team_id = 3;
  optional uint64 arena_id = 4;
  optional common.Date date = 5;
  // Real-life timestamp for when the match will be simulated
  // This does **not** mean the simulation will finish at this time!
  optional uint64 utc_scheduled_time = 6;
}

message Series {
  repeated MatchInstance matches = 1;

  enum SeriesType {
    Normal = 0;
    FirstTo = 1;
  }
  optional SeriesType series_type = 2;
  optional bytes series_type_payload = 3;
}

message GetSeasonResponse {
  optional uint64 season_id = 1;
  optional common.Date current_date = 2;
  repeated Series all_series = 3;
}